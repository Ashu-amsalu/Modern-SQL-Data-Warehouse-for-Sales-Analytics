/*
==============================================================
DDL Script: Creat sliver table
==============================================================
Script Purpose:
This Script creates table in the sliver schema and dropping the existing table if it alredy existed.
Run this script to re_define the DDl structure of the  sliver layer
==============================================================
*/
-----------------------------------------------------------
--- Inserting  bronze.crm_cust_info into sliver.crm_cust_info
-----------------------------------------------------------

TRUNCATE TABLE sliver.crm_cust_info
INSERT INTO sliver.crm_cust_info (
    cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date
	)	
select
	cst_id,
	cst_key,
	TRIM (cst_firstname) AS cst_firstname,
	TRIM (cst_lastname) AS cst_lastname,
CASE
	WHEN cst_marital_status = 'S' THEN 'Single'
	WHEN cst_marital_status = 'M' THEN 'Married'
ELSE 'n/a'
END AS cst_marital_status,
CASE
	WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
	WHEN UPPER(TRIM(cst_gndr))= 'F' THEN 'Female'
ELSE 'n/a'
END AS cst_gndr,
cst_create_date
FROM (
	select * ,
	ROW_NUMBER () OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag
	from bronze.crm_cust_info)  t
	where flag = 1 
	ORDER BY CASE WHEN cst_id is null then 1 else 0 end

-----------------------------------------------------------
--- Inserting  bronze.crm_prd_info into sliver.crm_prd_info
-----------------------------------------------------------

TRUNCATE TABLE sliver.crm_prd_info
INSERT INTO sliver.crm_prd_info (
	prd_id,
	prd_key,
	cat_id,
	prd_nm,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt )
select
	prd_id,
	SUBSTRING(prd_key,7, len(prd_key)) as prd_key,
	REPLACE (SUBSTRING (prd_key,1, 5), '-', '_') AS cat_id,
	prd_nm,
	isnull (prd_cost, 0) AS prd_cost,
CASE
	WHEN UPPER(prd_line) = 'M' THEN 'Mauntain'
	WHEN UPPER(prd_line) = 'R' THEN 'Road'
	WHEN UPPER(prd_line) = 'S' THEN 'Other Sales'
	WHEN UPPER(prd_line) = 'T' THEN 'Touring'
	ELSE 'n/a'
END AS prd_line,
prd_start_dt,
DATEADD (DAY,-1, LEAD (prd_start_dt) OVER (PARTITION BY prd_key order by prd_start_dt) ) AS prd_end_dt_test
from bronze.crm_prd_info

-----------------------------------------------------------
---Insert bronze.crm_sales_details to sliver.crm_sales_details
-----------------------------------------------------------

TRUNCATE TABLE sliver.crm_sales_details
INSERT INTO sliver.crm_sales_details (
    sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price 
	)
select
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
CASE 
	WHEN sls_order_dt = 0 or len(sls_order_dt) != 8 THEN NULL
	ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
END AS sls_order_date,
CASE
	WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
	ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
END AS sls_ship_dt,
CASE
	WHEN sls_due_dt = 0 OR len(sls_due_dt) != 8 THEN NULL
	ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
END AS sls_due_dt,
CASE
	when sls_sales <= 0 OR sls_sales IS NULL OR sls_sales != sls_quantity* ABS(sls_price) THEN sls_quantity* ABS(sls_price)
ELSE sls_sales
END AS sls_sales,
	sls_quantity,
CASE 
	WHEN sls_price < =  0 OR sls_price IS NULL  THEN  sls_sales/NULLIF (sls_quantity,0)
ELSE sls_price
END AS sls_price
from bronze.crm_sales_details

-----------------------------------------------------------
---Insert bronze.erp_cust_az12 INTO  sliver.erp_cust_az12
-----------------------------------------------------------

TRUNCATE TABLE sliver.erp_cust_az12
INSERT INTO sliver.erp_cust_az12 (
	CID,
	BDATE,
	GEN 
	)
SELECT
TRIM(REPLACE(CID,'NAS','')) AS CID,
CASE 
	WHEN BDATE > GETDATE() THEN NULL
	ELSE BDATE 
END AS BDATE,
CASE 
	WHEN UPPER(TRIM(GEN))= 'F' THEN 'Female'
	WHEN UPPER(TRIM(GEN)) = 'M' THEN ' Male'
    WHEN UPPER(TRIM(GEN)) = '' OR UPPER(TRIM(GEN)) IS NULL THEN 'n/a'
	ELSE GEN
END AS GEN
from bronze.erp_cust_az12

-----------------------------------------------------------
---Insert bronze.erp_loc_a101 INTO  sliver.erp_loc_a101
-----------------------------------------------------------

TRUNCATE TABLE sliver.erp_loc_a101 
INSERT INTO sliver.erp_loc_a101 (
	CID,
	CNTRY
	)
SELECT
	TRIM(REPLACE(CID,'-','')) AS CID,
CASE
	WHEN TRIM(UPPER(CNTRY)) = 'DE' OR TRIM(UPPER(CNTRY)) = 'Germany'  THEN 'Germany'
	WHEN TRIM(UPPER(CNTRY)) = 'US' OR TRIM(UPPER(CNTRY)) = 'USA' THEN 'United States'
	WHEN TRIM(UPPER(CNTRY)) = '' or TRIM(UPPER(CNTRY))  IS NULL THEN 'n/a'
ELSE CNTRY
END AS CNTRY
FROM bronze.erp_loc_a101

-------------------------------------------------
--- Insert bronze.erp_px_cat_g1v2 INTO sliver. erp_px_cat_g1v2 
-------------------------------------------------

TRUNCATE TABLE sliver. erp_px_cat_g1v2
INSERT INTO sliver. erp_px_cat_g1v2 (
	ID,
	CAT,
	SUBCAT,
	MAINTENANCE
	)
SELECT
	ID,
	CAT,
	SUBCAT,
	MAINTENANCE
from bronze. erp_px_cat_g1v2
	
