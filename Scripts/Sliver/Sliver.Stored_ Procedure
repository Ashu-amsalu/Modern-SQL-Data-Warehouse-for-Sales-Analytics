/*
==============================================================
Stored Procedure: Load sliver layer 
==============================================================
Script Purpose:
This stored procedure loads data into the 'sliver' schema from the 'bronze' schema.
It performs the following action:
 - Data cleansing
 - Data Standardization
 - Data Normalisation
 - Driven Column
 - Data Enrichment
 - Truncates the sliver table before loading the data
Parameters:
	Non:
	This store procedure does not accept any parameters or return any values

Methods to use example:
EXEC sliver.load_bronze
==============================================================
*/

CREATE OR ALTER PROCEDURE sliver.load_sliver
AS
BEGIN
    DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME, @batch_end_time DATETIME;

    BEGIN TRY
        SET @batch_start_time = GETDATE();
        PRINT '=============================================';
        PRINT 'Loading CRM TABLES';
        PRINT '=============================================';

        --------------------------------------
        -- Load sliver.crm_cust_info
        --------------------------------------
        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.crm_cust_info';
        TRUNCATE TABLE sliver.crm_cust_info;

        PRINT '>>> Inserting data into: sliver.crm_cust_info';
        INSERT INTO sliver.crm_cust_info (
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_marital_status,
            cst_gndr,
            cst_create_date
        )
        SELECT
            cst_id,
            cst_key,
            TRIM(cst_firstname) AS cst_firstname,
            TRIM(cst_lastname) AS cst_lastname,
            CASE
                WHEN cst_marital_status = 'S' THEN 'Single'
                WHEN cst_marital_status = 'M' THEN 'Married'
                ELSE 'n/a'
            END AS cst_marital_status,
            CASE
                WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
                WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
                ELSE 'n/a'
            END AS cst_gndr,
            cst_create_date
        FROM (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag
            FROM bronze.crm_cust_info
        ) t
        WHERE flag = 1
        ORDER BY CASE WHEN cst_id IS NULL THEN 1 ELSE 0 END;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

        --------------------------------------
        -- Load sliver.crm_prd_info
        --------------------------------------
        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.crm_prd_info';
        TRUNCATE TABLE sliver.crm_prd_info;

        PRINT '>>> Inserting data into: sliver.crm_prd_info';
        INSERT INTO sliver.crm_prd_info (
            prd_id,
            prd_key,
            cat_id,
            prd_nm,
            prd_cost,
            prd_line,
            prd_start_dt,
            prd_end_dt
        )
        SELECT
            prd_id,
            SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key,
            REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_id,
            prd_nm,
            ISNULL(prd_cost, 0) AS prd_cost,
            CASE
                WHEN UPPER(prd_line) = 'M' THEN 'Mountain'
                WHEN UPPER(prd_line) = 'R' THEN 'Road'
                WHEN UPPER(prd_line) = 'S' THEN 'Other Sales'
                WHEN UPPER(prd_line) = 'T' THEN 'Touring'
                ELSE 'n/a'
            END AS prd_line,
            prd_start_dt,
            DATEADD(DAY, -1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt
        FROM bronze.crm_prd_info;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

        --------------------------------------
        -- Load sliver.crm_sales_details
        --------------------------------------
        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.crm_sales_details';
        TRUNCATE TABLE sliver.crm_sales_details;

        PRINT '>>> Inserting data into: sliver.crm_sales_details';
        INSERT INTO sliver.crm_sales_details (
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            sls_order_dt,
            sls_ship_dt,
            sls_due_dt,
            sls_sales,
            sls_quantity,
            sls_price
        )
        SELECT
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            CASE 
                WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
                ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
            END AS sls_order_dt,
            CASE
                WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
                ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
            END AS sls_ship_dt,
            CASE
                WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
                ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
            END AS sls_due_dt,
            CASE
                WHEN sls_sales <= 0 OR sls_sales IS NULL OR sls_sales != sls_quantity * ABS(sls_price) 
                    THEN sls_quantity * ABS(sls_price)
                ELSE sls_sales
            END AS sls_sales,
            sls_quantity,
            CASE 
                WHEN sls_price <= 0 OR sls_price IS NULL  
                    THEN sls_sales / NULLIF(sls_quantity, 0)
                ELSE sls_price
            END AS sls_price
        FROM bronze.crm_sales_details;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

        --------------------------------------
        -- Load ERP Sliver TABLES
        --------------------------------------
        SET @batch_start_time = GETDATE();
        PRINT '================================================';
        PRINT 'Loading ERP Sliver TABLES';
        PRINT '================================================';
        --------------------------------------
        -- Load sliver.erp_cust_az12
        --------------------------------------

        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.erp_cust_az12';
        TRUNCATE TABLE sliver.erp_cust_az12;

        PRINT '>>> Inserting data into: sliver.erp_cust_az12';
        INSERT INTO sliver.erp_cust_az12 (
            CID,
            BDATE,
            GEN
        )
        SELECT
            TRIM(REPLACE(CID, 'NAS', '')) AS CID,
            CASE 
                WHEN BDATE > GETDATE() THEN NULL
                ELSE BDATE 
            END AS BDATE,
            CASE 
                WHEN UPPER(TRIM(GEN)) = 'F' THEN 'Female'
                WHEN UPPER(TRIM(GEN)) = 'M' THEN 'Male'
                WHEN GEN IS NULL OR TRIM(GEN) = '' THEN 'n/a'
                ELSE GEN
            END AS GEN
        FROM bronze.erp_cust_az12;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';
        --------------------------------------
        -- Load sliver.erp_loc_a101
        --------------------------------------

        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.erp_loc_a101';
        TRUNCATE TABLE sliver.erp_loc_a101;

        PRINT '>>> Inserting data into: sliver.erp_loc_a101';
        INSERT INTO sliver.erp_loc_a101 (
            CID,
            CNTRY
        )
        SELECT
            TRIM(REPLACE(CID, '-', '')) AS CID,
            CASE
                WHEN TRIM(UPPER(CNTRY)) IN ('DE', 'GERMANY') THEN 'Germany'
                WHEN TRIM(UPPER(CNTRY)) IN ('US', 'USA') THEN 'United States'
                WHEN CNTRY IS NULL OR TRIM(CNTRY) = '' THEN 'n/a'
                ELSE CNTRY
            END AS CNTRY
        FROM bronze.erp_loc_a101;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

        --------------------------------------
        -- Load sliver.erp_px_cat_g1v2
        --------------------------------------

        SET @start_time = GETDATE();
        PRINT '>>> Truncating Table: sliver.erp_px_cat_g1v2';
        TRUNCATE TABLE sliver.erp_px_cat_g1v2;

        PRINT '>>> Inserting data into: sliver.erp_px_cat_g1v2';
        INSERT INTO sliver.erp_px_cat_g1v2 (
            ID,
            CAT,
            SUBCAT,
            MAINTENANCE
        )
        SELECT
            ID,
            CAT,
            SUBCAT,
            MAINTENANCE
        FROM bronze.erp_px_cat_g1v2;

        SET @end_time = GETDATE();
        PRINT '>>> Loading Duration: ' + CAST(DATEDIFF(SECOND, @start_time, @end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

        --------------------------------------
        -- Final Batch Duration
        --------------------------------------

        SET @batch_end_time = GETDATE();
        PRINT '>>> Batch Loading Duration: ' + CAST(DATEDIFF(SECOND, @batch_start_time, @batch_end_time) AS NVARCHAR) + ' seconds';
        PRINT '================================================';

    END TRY
    BEGIN CATCH
        PRINT '================================================';
        PRINT '>>>ERROR_MESSAGE: ' + ERROR_MESSAGE();
        PRINT '>>> ERROR_MESSAGE: ' + CAST(ERROR_NUMBER() AS NVARCHAR);
        PRINT '>>> ERROR_MESSAGE: ' + CAST(ERROR_STATE() AS NVARCHAR);
        PRINT '================================================';
    END CATCH
END;

